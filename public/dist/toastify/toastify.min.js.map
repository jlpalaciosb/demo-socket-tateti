{"version":3,"sources":["jsdelivr-header.js","/npm/toastify-js@1.12.0/src/toastify.js"],"names":[],"mappings":"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","file":"/npm/toastify-js@1.12.0/src/toastify.js","sourceRoot":"","sourcesContent":["/**\n * Minified by jsDelivr using Terser v5.14.1.\n * Original file: /npm/toastify-js@1.12.0/src/toastify.js\n *\n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\n","/*!\n * Toastify js 1.12.0\n * https://github.com/apvarun/toastify-js\n * @license MIT licensed\n *\n * Copyright (C) 2018 Varun A P\n */\n(function(root, factory) {\n  if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Toastify = factory();\n  }\n})(this, function(global) {\n  // Object initialization\n  var Toastify = function(options) {\n      // Returning a new init object\n      return new Toastify.lib.init(options);\n    },\n    // Library version\n    version = \"1.12.0\";\n\n  // Set the default global options\n  Toastify.defaults = {\n    oldestFirst: true,\n    text: \"Toastify is awesome!\",\n    node: undefined,\n    duration: 3000,\n    selector: undefined,\n    callback: function () {\n    },\n    destination: undefined,\n    newWindow: false,\n    close: false,\n    gravity: \"toastify-top\",\n    positionLeft: false,\n    position: '',\n    backgroundColor: '',\n    avatar: \"\",\n    className: \"\",\n    stopOnFocus: true,\n    onClick: function () {\n    },\n    offset: {x: 0, y: 0},\n    escapeMarkup: true,\n    ariaLive: 'polite',\n    style: {background: ''}\n  };\n\n  // Defining the prototype of the object\n  Toastify.lib = Toastify.prototype = {\n    toastify: version,\n\n    constructor: Toastify,\n\n    // Initializing the object with required parameters\n    init: function(options) {\n      // Verifying and validating the input object\n      if (!options) {\n        options = {};\n      }\n\n      // Creating the options object\n      this.options = {};\n\n      this.toastElement = null;\n\n      // Validating the options\n      this.options.text = options.text || Toastify.defaults.text; // Display message\n      this.options.node = options.node || Toastify.defaults.node;  // Display content as node\n      this.options.duration = options.duration === 0 ? 0 : options.duration || Toastify.defaults.duration; // Display duration\n      this.options.selector = options.selector || Toastify.defaults.selector; // Parent selector\n      this.options.callback = options.callback || Toastify.defaults.callback; // Callback after display\n      this.options.destination = options.destination || Toastify.defaults.destination; // On-click destination\n      this.options.newWindow = options.newWindow || Toastify.defaults.newWindow; // Open destination in new window\n      this.options.close = options.close || Toastify.defaults.close; // Show toast close icon\n      this.options.gravity = options.gravity === \"bottom\" ? \"toastify-bottom\" : Toastify.defaults.gravity; // toast position - top or bottom\n      this.options.positionLeft = options.positionLeft || Toastify.defaults.positionLeft; // toast position - left or right\n      this.options.position = options.position || Toastify.defaults.position; // toast position - left or right\n      this.options.backgroundColor = options.backgroundColor || Toastify.defaults.backgroundColor; // toast background color\n      this.options.avatar = options.avatar || Toastify.defaults.avatar; // img element src - url or a path\n      this.options.className = options.className || Toastify.defaults.className; // additional class names for the toast\n      this.options.stopOnFocus = options.stopOnFocus === undefined ? Toastify.defaults.stopOnFocus : options.stopOnFocus; // stop timeout on focus\n      this.options.onClick = options.onClick || Toastify.defaults.onClick; // Callback after click\n      this.options.offset = options.offset || Toastify.defaults.offset; // toast offset\n      this.options.escapeMarkup = options.escapeMarkup !== undefined ? options.escapeMarkup : Toastify.defaults.escapeMarkup;\n      this.options.ariaLive = options.ariaLive || Toastify.defaults.ariaLive;\n      this.options.style = options.style || Toastify.defaults.style;\n      if(options.backgroundColor) {\n        this.options.style.background = options.backgroundColor;\n      }\n\n      // Returning the current object for chaining functions\n      return this;\n    },\n\n    // Building the DOM element\n    buildToast: function() {\n      // Validating if the options are defined\n      if (!this.options) {\n        throw \"Toastify is not initialized\";\n      }\n\n      // Creating the DOM object\n      var divElement = document.createElement(\"div\");\n      divElement.className = \"toastify on \" + this.options.className;\n\n      // Positioning toast to left or right or center\n      if (!!this.options.position) {\n        divElement.className += \" toastify-\" + this.options.position;\n      } else {\n        // To be depreciated in further versions\n        if (this.options.positionLeft === true) {\n          divElement.className += \" toastify-left\";\n          console.warn('Property `positionLeft` will be depreciated in further versions. Please use `position` instead.')\n        } else {\n          // Default position\n          divElement.className += \" toastify-right\";\n        }\n      }\n\n      // Assigning gravity of element\n      divElement.className += \" \" + this.options.gravity;\n\n      if (this.options.backgroundColor) {\n        // This is being deprecated in favor of using the style HTML DOM property\n        console.warn('DEPRECATION NOTICE: \"backgroundColor\" is being deprecated. Please use the \"style.background\" property.');\n      }\n\n      // Loop through our style object and apply styles to divElement\n      for (var property in this.options.style) {\n        divElement.style[property] = this.options.style[property];\n      }\n\n      // Announce the toast to screen readers\n      if (this.options.ariaLive) {\n        divElement.setAttribute('aria-live', this.options.ariaLive)\n      }\n\n      // Adding the toast message/node\n      if (this.options.node && this.options.node.nodeType === Node.ELEMENT_NODE) {\n        // If we have a valid node, we insert it\n        divElement.appendChild(this.options.node)\n      } else {\n        if (this.options.escapeMarkup) {\n          divElement.innerText = this.options.text;\n        } else {\n          divElement.innerHTML = this.options.text;\n        }\n\n        if (this.options.avatar !== \"\") {\n          var avatarElement = document.createElement(\"img\");\n          avatarElement.src = this.options.avatar;\n\n          avatarElement.className = \"toastify-avatar\";\n\n          if (this.options.position == \"left\" || this.options.positionLeft === true) {\n            // Adding close icon on the left of content\n            divElement.appendChild(avatarElement);\n          } else {\n            // Adding close icon on the right of content\n            divElement.insertAdjacentElement(\"afterbegin\", avatarElement);\n          }\n        }\n      }\n\n      // Adding a close icon to the toast\n      if (this.options.close === true) {\n        // Create a span for close element\n        var closeElement = document.createElement(\"button\");\n        closeElement.type = \"button\";\n        closeElement.setAttribute(\"aria-label\", \"Close\");\n        closeElement.className = \"toast-close\";\n        closeElement.innerHTML = \"&#10006;\";\n\n        // Triggering the removal of toast from DOM on close click\n        closeElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            this.removeElement(this.toastElement);\n            window.clearTimeout(this.toastElement.timeOutValue);\n          }.bind(this)\n        );\n\n        //Calculating screen width\n        var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n        // Adding the close icon to the toast element\n        // Display on the right if screen width is less than or equal to 360px\n        if ((this.options.position == \"left\" || this.options.positionLeft === true) && width > 360) {\n          // Adding close icon on the left of content\n          divElement.insertAdjacentElement(\"afterbegin\", closeElement);\n        } else {\n          // Adding close icon on the right of content\n          divElement.appendChild(closeElement);\n        }\n      }\n\n      // Clear timeout while toast is focused\n      if (this.options.stopOnFocus && this.options.duration > 0) {\n        var self = this;\n        // stop countdown\n        divElement.addEventListener(\n          \"mouseover\",\n          function(event) {\n            window.clearTimeout(divElement.timeOutValue);\n          }\n        )\n        // add back the timeout\n        divElement.addEventListener(\n          \"mouseleave\",\n          function() {\n            divElement.timeOutValue = window.setTimeout(\n              function() {\n                // Remove the toast from DOM\n                self.removeElement(divElement);\n              },\n              self.options.duration\n            )\n          }\n        )\n      }\n\n      // Adding an on-click destination path\n      if (typeof this.options.destination !== \"undefined\") {\n        divElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            if (this.options.newWindow === true) {\n              window.open(this.options.destination, \"_blank\");\n            } else {\n              window.location = this.options.destination;\n            }\n          }.bind(this)\n        );\n      }\n\n      if (typeof this.options.onClick === \"function\" && typeof this.options.destination === \"undefined\") {\n        divElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            this.options.onClick();\n          }.bind(this)\n        );\n      }\n\n      // Adding offset\n      if(typeof this.options.offset === \"object\") {\n\n        var x = getAxisOffsetAValue(\"x\", this.options);\n        var y = getAxisOffsetAValue(\"y\", this.options);\n\n        var xOffset = this.options.position == \"left\" ? x : \"-\" + x;\n        var yOffset = this.options.gravity == \"toastify-top\" ? y : \"-\" + y;\n\n        divElement.style.transform = \"translate(\" + xOffset + \",\" + yOffset + \")\";\n\n      }\n\n      // Returning the generated element\n      return divElement;\n    },\n\n    // Displaying the toast\n    showToast: function() {\n      // Creating the DOM object for the toast\n      this.toastElement = this.buildToast();\n\n      // Getting the root element to with the toast needs to be added\n      var rootElement;\n      if (typeof this.options.selector === \"string\") {\n        rootElement = document.getElementById(this.options.selector);\n      } else if (this.options.selector instanceof HTMLElement || (typeof ShadowRoot !== 'undefined' && this.options.selector instanceof ShadowRoot)) {\n        rootElement = this.options.selector;\n      } else {\n        rootElement = document.body;\n      }\n\n      // Validating if root element is present in DOM\n      if (!rootElement) {\n        throw \"Root element is not defined\";\n      }\n\n      // Adding the DOM element\n      var elementToInsert = Toastify.defaults.oldestFirst ? rootElement.firstChild : rootElement.lastChild;\n      rootElement.insertBefore(this.toastElement, elementToInsert);\n\n      // Repositioning the toasts in case multiple toasts are present\n      Toastify.reposition();\n\n      if (this.options.duration > 0) {\n        this.toastElement.timeOutValue = window.setTimeout(\n          function() {\n            // Remove the toast from DOM\n            this.removeElement(this.toastElement);\n          }.bind(this),\n          this.options.duration\n        ); // Binding `this` for function invocation\n      }\n\n      // Supporting function chaining\n      return this;\n    },\n\n    hideToast: function() {\n      if (this.toastElement.timeOutValue) {\n        clearTimeout(this.toastElement.timeOutValue);\n      }\n      this.removeElement(this.toastElement);\n    },\n\n    // Removing the element from the DOM\n    removeElement: function(toastElement) {\n      // Hiding the element\n      // toastElement.classList.remove(\"on\");\n      toastElement.className = toastElement.className.replace(\" on\", \"\");\n\n      // Removing the element from DOM after transition end\n      window.setTimeout(\n        function() {\n          // remove options node if any\n          if (this.options.node && this.options.node.parentNode) {\n            this.options.node.parentNode.removeChild(this.options.node);\n          }\n\n          // Remove the element from the DOM, only when the parent node was not removed before.\n          if (toastElement.parentNode) {\n            toastElement.parentNode.removeChild(toastElement);\n          }\n\n          // Calling the callback function\n          this.options.callback.call(toastElement);\n\n          // Repositioning the toasts again\n          Toastify.reposition();\n        }.bind(this),\n        400\n      ); // Binding `this` for function invocation\n    },\n  };\n\n  // Positioning the toasts on the DOM\n  Toastify.reposition = function() {\n\n    // Top margins with gravity\n    var topLeftOffsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n    var topRightOffsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n    var offsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n\n    // Get all toast messages on the DOM\n    var allToasts = document.getElementsByClassName(\"toastify\");\n\n    var classUsed;\n\n    // Modifying the position of each toast element\n    for (var i = 0; i < allToasts.length; i++) {\n      // Getting the applied gravity\n      if (containsClass(allToasts[i], \"toastify-top\") === true) {\n        classUsed = \"toastify-top\";\n      } else {\n        classUsed = \"toastify-bottom\";\n      }\n\n      var height = allToasts[i].offsetHeight;\n      classUsed = classUsed.substr(9, classUsed.length-1)\n      // Spacing between toasts\n      var offset = 15;\n\n      var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n      // Show toast in center if screen with less than or equal to 360px\n      if (width <= 360) {\n        // Setting the position\n        allToasts[i].style[classUsed] = offsetSize[classUsed] + \"px\";\n\n        offsetSize[classUsed] += height + offset;\n      } else {\n        if (containsClass(allToasts[i], \"toastify-left\") === true) {\n          // Setting the position\n          allToasts[i].style[classUsed] = topLeftOffsetSize[classUsed] + \"px\";\n\n          topLeftOffsetSize[classUsed] += height + offset;\n        } else {\n          // Setting the position\n          allToasts[i].style[classUsed] = topRightOffsetSize[classUsed] + \"px\";\n\n          topRightOffsetSize[classUsed] += height + offset;\n        }\n      }\n    }\n\n    // Supporting function chaining\n    return this;\n  };\n\n  // Helper function to get offset.\n  function getAxisOffsetAValue(axis, options) {\n\n    if(options.offset[axis]) {\n      if(isNaN(options.offset[axis])) {\n        return options.offset[axis];\n      }\n      else {\n        return options.offset[axis] + 'px';\n      }\n    }\n\n    return '0px';\n\n  }\n\n  function containsClass(elem, yourClass) {\n    if (!elem || typeof yourClass !== \"string\") {\n      return false;\n    } else if (\n      elem.className &&\n      elem.className\n        .trim()\n        .split(/\\s+/gi)\n        .indexOf(yourClass) > -1\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // Setting up the prototype for the init object\n  Toastify.lib.init.prototype = Toastify.lib;\n\n  // Returning the Toastify function to be assigned to the window object/module\n  return Toastify;\n});\n"]}